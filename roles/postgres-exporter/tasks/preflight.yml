---
- name: assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This role only works with systemd"

- name: get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version
  tags:
    - skip_ansible_lint

- name: set systemd version fact
  set_fact:
    postgres_exporter_systemd_version: "{{ __systemd_version.stdout_lines[0] | regex_replace('^systemd\\s(\\d+).*$', '\\1') }}"

- name: naive assertion of proper listen address
  assert:
    that:
      - "':' in postgres_exporter_web_listen_address"

- name: check if postgres_exporter is installed
  stat:
    path: "{{ postgres_exporter_binary_install_dir }}/postgres_exporter"
  register: __postgres_exporter_is_installed
  check_mode: false
  tags:
    - postgres_exporter_install

# - name: gather currently installed postgres_exporter version (if any)
#   command: "{{ postgres_exporter_binary_install_dir }}/postgres_exporter --version"
#   args:
#     warn: false
#   changed_when: false
#   register: __postgres_exporter_current_version_output
#   check_mode: false
#   when: __postgres_exporter_is_installed.stat.exists
#   tags:
#     - postgres_exporter_install
#     - skip_ansible_lint

- block:
    - name: get latest release
      uri:
        url: "https://api.github.com/repos/prometheus-community/postgres_exporter/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      register: _latest_release
      until: _latest_release.status == 200
      retries: 5

    - name: "set postgres_exporter version to {{ _latest_release.json.tag_name[1:] }}"
      set_fact:
        postgres_exporter_version: "{{ _latest_release.json.tag_name[1:] }}"
  when:
    - postgres_exporter_version == "latest"
    - postgres_exporter_binary_local_dir | length == 0
  delegate_to: localhost
  run_once: true
  check_mode: false
  become: false

- block:
    - name: get checksum list from github
      set_fact:
        _checksums: "{{ lookup('url', 'https://github.com/prometheus-community/postgres_exporter/releases/download/v' + postgres_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"
      run_once: true

    - name: "Get checksum for {{ go_arch }} architecture"
      set_fact:
        postgres_exporter_checksum: "{{ item.split(' ')[0] }}"
      with_items: "{{ _checksums }}"
      when:
        - "('linux-' + go_arch + '.tar.gz') in item"
  delegate_to: localhost
  when: postgres_exporter_binary_local_dir | length == 0